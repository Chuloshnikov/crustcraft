// middleware.ts (–≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞, —Ä—è–¥–æ–º —Å app/)
import { withAuth } from "next-auth/middleware";
import { NextResponse } from "next/server";
import type { NextRequestWithAuth } from "next-auth/middleware";

export default withAuth(
  function middleware(req: NextRequestWithAuth) {
    const token = req.nextauth.token;
    const { pathname } = req.nextUrl;

    console.log("‚úÖ Middleware running:");
    console.log("‚Üí Path:", pathname);
    console.log("‚Üí Token exists:", !!token);
    console.log("‚Üí Token data:", token);

    const isAuth = !!token;

    // –†–µ–¥–∏—Ä–µ–∫—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—É–±–ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    if (isAuth && ["/login", "/register"].includes(pathname)) {
      console.log("üîÅ Redirect: already authenticated, blocking guest page");
      return NextResponse.redirect(new URL("/profile", req.url));
    }

    // –°–ø–∏—Å–æ–∫ –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    const protectedRoutes = ["/profile", "/cart"];
    const isProtected = protectedRoutes.some((route) =>
      pathname === route || pathname.startsWith(`${route}/`)
    );

    // –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    if (!isAuth && isProtected) {
      console.log("üîÅ Redirect: not authenticated, blocking protected page");
      const loginUrl = new URL("/login", req.url);
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞
      loginUrl.searchParams.set('callbackUrl', pathname);
      return NextResponse.redirect(loginUrl);
    }

    console.log("‚úÖ Access granted");
    return NextResponse.next();
  },
  {
    callbacks: {
      // –≠—Ç–æ—Ç –∫–æ–ª–±—ç–∫ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –¥–æ–ª–∂–µ–Ω –ª–∏ middleware –≤–æ–æ–±—â–µ –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è
      authorized: ({ token, req }) => {
        const { pathname } = req.nextUrl;
        
        // –†–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ –ø—É–±–ª–∏—á–Ω—ã–º –º–∞—Ä—à—Ä—É—Ç–∞–º –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
        const publicRoutes = ["/", "/about", "/contact"];
        if (publicRoutes.includes(pathname)) {
          return true;
        }

        // –î–ª—è –∑–∞—â–∏—â–µ–Ω–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–æ–∫–µ–Ω
        const protectedRoutes = ["/profile", "/cart"];
        const isProtected = protectedRoutes.some((route) =>
          pathname === route || pathname.startsWith(`${route}/`)
        );

        if (isProtected) {
          return !!token;
        }

        // –î–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—Å–µ–≥–¥–∞ —Ä–∞–∑—Ä–µ—à–∞–µ–º (–ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤ middleware)
        return true;
      },
    },
  }
);

// –í–∞–∂–Ω–æ: –º–∞—Ç—á–µ—Ä –¥–æ–ª–∂–µ–Ω –≤–∫–ª—é—á–∞—Ç—å –≤—Å–µ –º–∞—Ä—à—Ä—É—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å
export const config = {
  matcher: [
    // –ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    "/profile/:path*",
    "/cart/:path*",
    // –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã –¥–ª—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö (–¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞)
    "/login",
    "/register",
    // –ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    // "/((?!api|_next/static|_next/image|favicon.ico).*)",
  ],
};